@page "/Components/DropdownMultiSelection"
@layout ComponentsLayout
@inject SemanticBlazor.Web.Data.DummyDataService dummyData

<h1>DropdownMultiSelection & DataMultiSelection</h1>
See the full documentation at <NavLink href="https://semantic-ui.com/modules/dropdown.html" target="_blank">Semantic UI</NavLink>.

<h3>Standard</h3>
<p>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" DefaultText="Select...">
    <ListItems>
      <SemSelectListItem Text="Option 1" Value="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2" Value="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3" Value="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4" Value="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedValue != null ? String.Join(",", SelectedValue): "{null}")
</p>
<CodeHighlight Code=@(@"
  <SemDropdownMultiSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."">
    <ListItems>
      <SemSelectListItem Text=""Option 1"" Value=""Option 1""></SemSelectListItem>
      <SemSelectListItem Text=""Option 2"" Value=""Option 2""></SemSelectListItem>
      <SemSelectListItem Text=""Option 3"" Value=""Option 3""></SemSelectListItem>
      <SemSelectListItem Text=""Option 4"" Value=""Option 4""></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>") />

<h3>Disabled</h3>
<p>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" DefaultText="Select..." Enabled="@dropdownEnabled">
    <ListItems>
      <SemSelectListItem Text="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>
  <SemButton OnClick="@(() => dropdownEnabled = !dropdownEnabled)" Classes="@(new[] { ButtonClass.Basic })" Color="ButtonColor.Teal" Style="vertical-align: bottom">Toggle</SemButton>
</p>
<CodeHighlight Code=@(@"
  <SemDropdownMultiSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."" Enabled=""@dropdownEnabled"">
    <ListItems>
      <SemSelectListItem Text=""Option 1""></SemSelectListItem>
      <SemSelectListItem Text=""Option 2""></SemSelectListItem>
      <SemSelectListItem Text=""Option 3""></SemSelectListItem>
      <SemSelectListItem Text=""Option 4""></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>") />

<h3>Searching</h3>
<p>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" DefaultText="Select..." Search="true">
    <ListItems>
      <SemSelectListItem Text="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedValue != null ? String.Join(",", SelectedValue): "{null}")
</p>
<CodeHighlight Code=@(@"
  <SemDropdownMultiSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."" Search=""true"">
    <ListItems>
      <SemSelectListItem Text=""Option 1""></SemSelectListItem>
      <SemSelectListItem Text=""Option 2""></SemSelectListItem>
      <SemSelectListItem Text=""Option 3""></SemSelectListItem>
      <SemSelectListItem Text=""Option 4""></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>") />

<h3>Max selections</h3>
<p>
  <SemDropdownMultiSelection @bind-Value="SelectedValue4" DefaultText="Select..." Search="true" MaxSelections="2">
    <ListItems>
      <SemSelectListItem Text="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedValue4 != null ? String.Join(",", SelectedValue4): "{null}")
</p>
<CodeHighlight Code=@(@"
  <SemDropdownMultiSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."" Search=""true""  MaxSelections=""2"">
    <ListItems>
      <SemSelectListItem Text=""Option 1""></SemSelectListItem>
      <SemSelectListItem Text=""Option 2""></SemSelectListItem>
      <SemSelectListItem Text=""Option 3""></SemSelectListItem>
      <SemSelectListItem Text=""Option 4""></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>") />

<h3>Allow additions</h3>
<p>
  <SemDropdownMultiSelection @bind-Value="SelectedValue3" DefaultText="Select..." Search="true" AllowAdditions="true">
    <ListItems>
      <SemSelectListItem Text="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedValue3 != null ? String.Join(",", SelectedValue3) : "{null}")
</p>
<CodeHighlight Code=@(@"
  <SemDropdownMultiSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."" Search=""true"" AllowAdditions=""true"">
    <ListItems>
      <SemSelectListItem Text=""Option 1""></SemSelectListItem>
      <SemSelectListItem Text=""Option 2""></SemSelectListItem>
      <SemSelectListItem Text=""Option 3""></SemSelectListItem>
      <SemSelectListItem Text=""Option 4""></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>") />

<h3>Use labels</h3>
<p>
  <SemDropdownMultiSelection @bind-Value="SelectedValue2" DefaultText="Select..." Search="true" UseLabels="false">
    <ListItems>
      <SemSelectListItem Text="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedValue2 != null ? String.Join(",", SelectedValue2) : "{null}")
</p>
<CodeHighlight Code=@(@"
  <SemDropdownMultiSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."" Search=""true""  UseLabels=""false"">
    <ListItems>
      <SemSelectListItem Text=""Option 1""></SemSelectListItem>
      <SemSelectListItem Text=""Option 2""></SemSelectListItem>
      <SemSelectListItem Text=""Option 3""></SemSelectListItem>
      <SemSelectListItem Text=""Option 4""></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>") />

<h3>Button variant</h3>
<p>Button variant will force useLables attribute to false.</p>
<p>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true" ButtonColor="ButtonColor.Green"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true" ButtonEmphasis="Emphasis.Primary"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true" ButtonIcon="Icon.Tag"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true" ButtonIcon="Icon.Tag" ButtonIconLabeled="false"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true" ButtonIcon="Icon.Tag" ButtonIconPosition="IconPosition.Right"></SemDropdownMultiSelection>
</p>
<p>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Mini" IsButton="true" ButtonSize="Size.Mini"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Tiny" IsButton="true" ButtonSize="Size.Tiny"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Small" IsButton="true" ButtonSize="Size.Small"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Medium" IsButton="true" ButtonSize="Size.Medium"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Large" IsButton="true" ButtonSize="Size.Large"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Big" IsButton="true" ButtonSize="Size.Big"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Huge" IsButton="true" ButtonSize="Size.Huge"></SemDropdownMultiSelection>
  <SemDropdownMultiSelection @bind-Value="SelectedValue" Items="options" DefaultText="Massive" IsButton="true" ButtonSize="Size.Massive"></SemDropdownMultiSelection>
</p>

<h3>Custom item template</h3>
<p>
  <SemDropdownMultiSelection @bind-Value="SelectedValue2" DefaultText="Select...">
    <ListItems>
      <SemSelectListItem Text="Option 1" Value="1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2" Value="2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3" Value="3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4" Value="4"></SemSelectListItem>
    </ListItems>
    <ItemTemplate>
      <SemLabel Color="Color.Red" Classes="@(new[] { LabelClass.Empty, LabelClass.Circular })"></SemLabel>
      <span class="text">@(((SemanticBlazor.Models.ListItem)context).Text)</span>
      <span class="description">@(((SemanticBlazor.Models.ListItem)context).Value)</span>
    </ItemTemplate>
  </SemDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedValue2 != null ? String.Join(",", SelectedValue2): "{null}")
</p>
<CodeHighlight Code=@(@"
  <SemDropdownMultiSelection @bind-Value=""SelectedValue2"" DefaultText=""Select..."">
    <ListItems>
      <SemSelectListItem Text=""Option 1"" Value=""1""></SemSelectListItem>
      <SemSelectListItem Text=""Option 2"" Value=""2""></SemSelectListItem>
      <SemSelectListItem Text=""Option 3"" Value=""3""></SemSelectListItem>
      <SemSelectListItem Text=""Option 4"" Value=""4""></SemSelectListItem>
    </ListItems>
    <ItemTemplate>
      <SemLabel Color=""Color.Red"" Classes=""@(new[] { LabelClass.Empty, LabelClass.Circular })""></SemLabel>
      <span class=""text"">@(((SemanticBlazor.Models.ListItem)context).Text)</span>
      <span class=""description"">@(((SemanticBlazor.Models.ListItem)context).Value)</span>
    </ItemTemplate>
  </SemDropdownMultiSelection>") />

<h3>Databinding items - List of item objects value</h3>
<p>
  <SemDataDropdownMultiSelection @bind-Value="SelectedDummies" Items="dummies" ItemText="@(dummy => dummy.Name)"></SemDataDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedDummies != null ? String.Join(",", SelectedDummies) : "{null}")
</p>
<CodeHighlight Code=@(@"
  <SemDataDropdownMultiSelection @bind-Value=""SelectedDummies"" Items=""dummies"" ItemText=""@(dummy => dummy.Name)""></SemDataDropdownMultiSelection>") />

<h3>Databinding items - List&lt;string&gt; value</h3>
<p>
  <SemDataDropdownMultiSelection @bind-Value="SelectedDummyName" Items="dummies" ValueSelector="@(dummy => dummy.Name)" ItemText="@(dummy => dummy.Name)" DefaultText="Select..."></SemDataDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedDummyName != null ? String.Join(",", SelectedDummyName) : "{null}")
</p>
<CodeHighlight Code=@(@"
  <SemDataDropdownMultiSelection @bind-Value=""SelectedDummyName"" Items=""dummies"" ValueSelector=""@(dummy => dummy.Name)"" ItemText=""@(dummy => dummy.Name)"" DefaultText=""Select...""></SemDataDropdownMultiSelection>") />

<h3>Databinding items - List&lt;int&gt; value</h3>
<p>
  <SemDataDropdownMultiSelection @bind-Value="SelectedDummyId" Items="dummies" ValueSelector="@(dummy => dummy.DummyId)" ItemText="@(dummy => dummy.Name)" DefaultText="Select..."></SemDataDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedDummyId != null ? String.Join(",", SelectedDummyId) : "{null}")
</p>
<CodeHighlight Code=@(@"
  <SemDataDropdownMultiSelection @bind-Value=""SelectedDummyId"" Items=""dummies"" ValueSelector=""@(dummy => dummy.DummyId)"" ItemText=""@(dummy => dummy.Name)"" DefaultText=""Select...""></SemDataDropdownMultiSelection>") />

<h3>Enum value</h3>
<p>
  <SemDataDropdownMultiSelection @bind-Value="SelectedOptions" Items="Enum.GetValues(typeof(Option)).Cast<Option>()" DefaultText="Select..."></SemDataDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedOptions != null ? String.Join(",", SelectedOptions) : "{null}")
</p>
<CodeHighlight Code=@(@"
  // Enum definition in C#
  enum Option
  {
    Option_1,
    Option_2,
    Option_3,
    Option_4
  }
  List<Option> SelectedOptions { get; set; }

  <SemDataDropdownMultiSelection @bind-Value=""SelectedOptions"" Items=""Enum.GetValues(typeof(Option)).Cast<Option>()"" DefaultText=""Select...""></SemDataDropdownMultiSelection>") />

<h3>Enum value via ListItems</h3>
<p>
  <SemDropdownMultiSelection @bind-Value="SelectedOptions" DefaultText="Select...">
    <ListItems>
      <SemSelectListItem Text="Option 1" Value="Option_1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2" Value="Option_2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3" Value="Option_3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4" Value="Option_4"></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>
</p>
<p>
  Selected value: @(SelectedOptions != null ? String.Join(",", SelectedOptions) : "{null}")
</p>
<CodeHighlight Code=@(@"
  <SemDropdownMultiSelection @bind-Value=""SelectedOption"" DefaultText=""Select..."">
    <ListItems>
      <SemSelectListItem Text=""Option 1"" Value=""Option_1""></SemSelectListItem>
      <SemSelectListItem Text=""Option 2"" Value=""Option_2""></SemSelectListItem>
      <SemSelectListItem Text=""Option 3"" Value=""Option_3""></SemSelectListItem>
      <SemSelectListItem Text=""Option 4"" Value=""Option_4""></SemSelectListItem>
    </ListItems>
  </SemDropdownMultiSelection>") />



@code {
  private bool dropdownEnabled { get; set; } = false;
  public List<string> SelectedValue { get; set; }
  public List<string> SelectedValue2 { get; set; }
  public List<string> SelectedValue3 { get; set; }
  public List<string> SelectedValue4 { get; set; }
  public List<int> SelectedDummyId { get; set; }
  public List<string> SelectedDummyName { get; set; }
  public List<SemanticBlazor.Web.Data.DummyData> SelectedDummies { get; set; }
  List<SemanticBlazor.Web.Data.DummyData> dummies = new List<Data.DummyData>();
  List<ListItem> options { get; set; } = new List<ListItem>()
{
    new ListItem() { Text="Option 1" },
    new ListItem() { Text="Option 2" },
    new ListItem() { Text="Option 3" },
    new ListItem() { Text="Option 4" }
  };
  List<Option> SelectedOptions { get; set; }

  protected override async Task OnInitializedAsync()
  {
    dummies = await dummyData.GetAllDataAsync();
    dummies = dummies.Take(5).ToList();
  }

  enum Option
  {
    Option_1,
    Option_2,
    Option_3,
    Option_4
  }
}