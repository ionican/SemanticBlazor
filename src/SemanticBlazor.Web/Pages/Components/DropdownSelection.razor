@page "/Components/DropdownSelection"
@layout ComponentsLayout
@inject SemanticBlazor.Web.Data.DummyDataService dummyData

<h1>DropdownSelection & DataDropdownSelection</h1>
See the full documentation at <NavLink href="https://semantic-ui.com/modules/dropdown.html" target="_blank">Semantic UI</NavLink>.

<h3>Standard</h3>
<p>
  <SemDropdownSelection @bind-Value="SelectedValue" DefaultText="Select...">
    <ListItems>
      <SemSelectListItem Text="Option 1" Value="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2" Value="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3" Value="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4" Value="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownSelection>
</p>
<p>
  Selected value: @(SelectedValue)
</p>
<CodeHighlight Code=@(@"
  <SemDropdownSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."">
    <ListItems>
      <SemSelectListItem Text=""Option 1"" Value=""Option 1""></SemSelectListItem>
      <SemSelectListItem Text=""Option 2"" Value=""Option 2""></SemSelectListItem>
      <SemSelectListItem Text=""Option 3"" Value=""Option 3""></SemSelectListItem>
      <SemSelectListItem Text=""Option 4"" Value=""Option 4""></SemSelectListItem>
    </ListItems>
  </SemDropdownSelection>") />

<h3>Disabled</h3>
<p>
  <SemDropdownSelection @bind-Value="SelectedValue" DefaultText="Select..." Enabled="@dropdownEnabled">
    <ListItems>
      <SemSelectListItem Text="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownSelection>
  <SemButton OnClick="@(() => dropdownEnabled = !dropdownEnabled)" Classes="@(new[] { ButtonClass.Basic })" Color="ButtonColor.Teal">Toggle</SemButton>
</p>
<CodeHighlight Code=@(@"
  <SemDropdownSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."" Enabled=""@dropdownEnabled"">
    <ListItems>
      <SemSelectListItem Text=""Option 1""></SemSelectListItem>
      <SemSelectListItem Text=""Option 2""></SemSelectListItem>
      <SemSelectListItem Text=""Option 3""></SemSelectListItem>
      <SemSelectListItem Text=""Option 4""></SemSelectListItem>
    </ListItems>
  </SemDropdownSelection>") />

<h3>Clearable</h3>
<p>
  <SemDropdownSelection @bind-Value="SelectedValue" DefaultText="Select..." Clearable="true">
    <ListItems>
      <SemSelectListItem Text="Option 1" Value="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2" Value="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3" Value="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4" Value="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownSelection>
</p>
<p>
  Selected value: @(SelectedValue)
</p>
<CodeHighlight Code=@(@"
    <SemDropdownSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."" Clearable=""true"">
      <ListItems>
        <SemSelectListItem Text=""Option 1"" Value=""Option 1""></SemSelectListItem>
        <SemSelectListItem Text=""Option 2"" Value=""Option 2""></SemSelectListItem>
        <SemSelectListItem Text=""Option 3"" Value=""Option 3""></SemSelectListItem>
        <SemSelectListItem Text=""Option 4"" Value=""Option 4""></SemSelectListItem>
      </ListItems>
    </SemDropdownSelection>") />

<h3>Searching</h3>
<p>
  <SemDropdownSelection @bind-Value="SelectedValue" DefaultText="Select..." Search="true">
    <ListItems>
      <SemSelectListItem Text="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownSelection>
</p>
<p>
  Selected value: @(SelectedValue)
</p>
<CodeHighlight Code=@(@"
    <SemDropdownSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."" Search=""true"">
      <ListItems>
        <SemSelectListItem Text=""Option 1""></SemSelectListItem>
        <SemSelectListItem Text=""Option 2""></SemSelectListItem>
        <SemSelectListItem Text=""Option 3""></SemSelectListItem>
        <SemSelectListItem Text=""Option 4""></SemSelectListItem>
      </ListItems>
    </SemDropdownSelection>") />

<h3>Allow additions</h3>
<p>
  <SemDropdownSelection @bind-Value="SelectedValue3" DefaultText="Select..." Search="true" AllowAdditions="true">
    <ListItems>
      <SemSelectListItem Text="Option 1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4"></SemSelectListItem>
    </ListItems>
  </SemDropdownSelection>
</p>
<p>
  Selected value: @(SelectedValue3)
</p>
<CodeHighlight Code=@(@"
    <SemDropdownSelection @bind-Value=""SelectedValue"" DefaultText=""Select..."" Search=""true"" AllowAdditions=""true"">
      <ListItems>
        <SemSelectListItem Text=""Option 1""></SemSelectListItem>
        <SemSelectListItem Text=""Option 2""></SemSelectListItem>
        <SemSelectListItem Text=""Option 3""></SemSelectListItem>
        <SemSelectListItem Text=""Option 4""></SemSelectListItem>
      </ListItems>
    </SemDropdownSelection>") />

<h3>Button variant</h3>
<p>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true" ButtonColor="ButtonColor.Green"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true" ButtonEmphasis="Emphasis.Primary"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true" ButtonIcon="Icon.Tag"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true" ButtonIcon="Icon.Tag" ButtonIconLabeled="false"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Select..." IsButton="true" ButtonIcon="Icon.Tag" ButtonIconPosition="IconPosition.Right"></SemDropdownSelection>
</p>
<p>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Mini" IsButton="true" ButtonSize="Size.Mini"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Tiny" IsButton="true" ButtonSize="Size.Tiny"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Small" IsButton="true" ButtonSize="Size.Small"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Medium" IsButton="true" ButtonSize="Size.Medium"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Large" IsButton="true" ButtonSize="Size.Large"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Big" IsButton="true" ButtonSize="Size.Big"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Huge" IsButton="true" ButtonSize="Size.Huge"></SemDropdownSelection>
  <SemDropdownSelection @bind-Value="SelectedValue" Items="options" DefaultText="Massive" IsButton="true" ButtonSize="Size.Massive"></SemDropdownSelection>
</p>
<p>
  Selected value: @(SelectedValue)
</p>
<CodeHighlight Code=@(@"
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Select..."" IsButton=""true""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Select..."" IsButton=""true"" ButtonColor=""ButtonColor.Green""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Select..."" IsButton=""true"" ButtonEmphasis=""Emphasis.Primary""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Select..."" IsButton=""true"" ButtonIcon=""Icon.Tag""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Select..."" IsButton=""true"" ButtonIcon=""Icon.Tag"" ButtonIconLabeled=""false""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Select..."" IsButton=""true"" ButtonIcon=""Icon.Tag"" ButtonIconPosition=""IconPosition.Right""></SemDropdownSelection>

    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Mini..."" IsButton=""true"" ButtonSize=""Size.Mini""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Tiny..."" IsButton=""true"" ButtonSize=""Size.Tiny""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Small..."" IsButton=""true"" ButtonSize=""Size.Small""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Medium..."" IsButton=""true"" ButtonSize=""Size.Medium""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Large..."" IsButton=""true"" ButtonSize=""Size.Large""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Big..."" IsButton=""true"" ButtonSize=""Size.Big""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Huge..."" IsButton=""true"" ButtonSize=""Size.Huge""></SemDropdownSelection>
    <SemDropdownSelection @bind-Value=""SelectedValue"" Items=""options"" DefaultText=""Massive..."" IsButton=""true"" ButtonSize=""Size.Massive""></SemDropdownSelection>") />

<h3>Custom item template</h3>
<p>
  <SemDropdownSelection @bind-Value="SelectedValue2" DefaultText="Select...">
    <ListItems>
      <SemSelectListItem Text="Option 1" Value="1"></SemSelectListItem>
      <SemSelectListItem Text="Option 2" Value="2"></SemSelectListItem>
      <SemSelectListItem Text="Option 3" Value="3"></SemSelectListItem>
      <SemSelectListItem Text="Option 4" Value="4"></SemSelectListItem>
    </ListItems>
    <ItemTemplate>
      <SemLabel Color="Color.Red" Classes="@(new[] { LabelClass.Empty, LabelClass.Circular })"></SemLabel>
      <span class="text">@(((SemanticBlazor.Models.ListItem)context).Text)</span>
      <span class="description">@(((SemanticBlazor.Models.ListItem)context).Value)</span>
    </ItemTemplate>
  </SemDropdownSelection>
</p>
<p>
  Selected value: @(SelectedValue2)
</p>
<CodeHighlight Code=@(@"
    <SemDropdownSelection @bind-Value=""SelectedValue2"" DefaultText=""Select..."">
      <ListItems>
        <SemSelectListItem Text=""Option 1"" Value=""1""></SemSelectListItem>
        <SemSelectListItem Text=""Option 2"" Value=""2""></SemSelectListItem>
        <SemSelectListItem Text=""Option 3"" Value=""3""></SemSelectListItem>
        <SemSelectListItem Text=""Option 4"" Value=""4""></SemSelectListItem>
      </ListItems>
      <ItemTemplate>
        <SemLabel Color=""Color.Red"" Classes=""@(new[] { LabelClass.Empty, LabelClass.Circular })""></SemLabel>
        <span class=""text"">@(((SemanticBlazor.Models.ListItem)context).Text)</span>
        <span class=""description"">@(((SemanticBlazor.Models.ListItem)context).Value)</span>
      </ItemTemplate>
    </SemDropdownSelection>") />

<h3>Databinding items - Item object value</h3>
  <p>
    <SemDataDropdownSelection @bind-Value="SelectedDummy" Items="dummies" ItemText="@(dummy => dummy.Name)"></SemDataDropdownSelection>
  </p>
  <p>
    Selected value: @SelectedDummy?.ToString())
  </p>
  <CodeHighlight Code=@(@"
        <SemDataDropdownSelection @bind-Value=""SelectedDummy"" Items=""dummies"" ItemText=""@(dummy => dummy.Name)""></SemDataDropdownSelection>") />

<h3>Databinding items - String value</h3>
<p>
  <SemDataDropdownSelection @bind-Value="SelectedDummyName" Items="dummies" ValueSelector="@(dummy => dummy.Name)" ItemText="@(dummy => dummy.Name)" DefaultText="Select..."></SemDataDropdownSelection>
</p>
<p>
  Selected value: @(SelectedDummyName)
</p>
<CodeHighlight Code=@(@"
        <SemDataDropdownSelection @bind-Value=""SelectedDummyName"" Items=""dummies"" ValueSelector=""@(dummy => dummy.Name)"" ItemText=""@(dummy => dummy.Name)"" DefaultText=""Select...""></SemDataDropdownSelection>") />

<h3>Databinding items - Int value</h3>
<p>
  <SemDataDropdownSelection @bind-Value="SelectedDummyId" Items="dummies" ValueSelector="@(dummy => dummy.DummyId)" ItemText="@(dummy => dummy.Name)" DefaultText="Select..."></SemDataDropdownSelection>
</p>
<p>
  Selected value: @(SelectedDummyId)
</p>
<CodeHighlight Code=@(@"
        <SemDataDropdownSelection @bind-Value=""SelectedDummyId"" Items=""dummies"" ValueSelector=""@(dummy => dummy.DummyId)"" ItemText=""@(dummy => dummy.Name)"" DefaultText=""Select...""></SemDataDropdownSelection>") />

<h3>Databinding items - Int? value</h3>
<p>
  <SemDataDropdownSelection @bind-Value="SelectedNullDummyId" Items="dummies" ValueSelector="@(dummy => dummy?.DummyId)" ItemText="@(dummy => dummy?.Name)" DefaultText="Select..." Clearable="true"></SemDataDropdownSelection>
</p>
<p>
  Selected value: @(SelectedNullDummyId?.ToString() ?? "{null}")
</p>
<CodeHighlight Code=@(@"
      <SemDataDropdownSelection @bind-Value=""SelectedNullDummyId"" Items=""dummies"" ValueSelector=""@(dummy => dummy?.DummyId)"" ItemText=""@(dummy => dummy.Name)"" DefaultText=""Select..."" Clearable=""true""></SemDataDropdownSelection>
        ") />

<h3>Enum value</h3>
<p>
  <SemDataDropdownSelection @bind-Value="SelectedOption" Items="Enum.GetValues(typeof(Option)).Cast<Option>()" DefaultText="Select..."></SemDataDropdownSelection>
</p>
<p>
  Selected value: @(SelectedOption.ToString())
</p>
<CodeHighlight Code=@(@"
      // Enum definition in C#
      enum Option
      {
        Option_1,
        Option_2,
        Option_3,
        Option_4
      }
      Option SelectedOption { get; set; }

      <SemDataDropdownSelection @bind-Value=""SelectedOption"" Items=""Enum.GetValues(typeof(Option)).Cast<Option>()"" DefaultText=""Select...""></SemDataDropdownSelection>") />

@*<h3>Enum value with ListItems</h3>
  <p>
    <SemDropdownSelection @bind-Value="SelectedOption" DefaultText="Select...">
      <ListItems>
        <SemSelectListItem Text="Option 1" Value="Option_1"></SemSelectListItem>
        <SemSelectListItem Text="Option 2" Value="Option_2"></SemSelectListItem>
        <SemSelectListItem Text="Option 3" Value="Option_3"></SemSelectListItem>
        <SemSelectListItem Text="Option 4" Value="Option_4"></SemSelectListItem>
      </ListItems>
    </SemDropdownSelection>
  </p>
  <p>
    Selected value: @(SelectedOption.ToString())
  </p>
  <CodeHighlight Code=@(@"
    <SemDropdownSelection @bind-Value=""SelectedOption"" DefaultText=""Select..."">
      <ListItems>
        <SemSelectListItem Text=""Option 1"" Value=""Option_1""></SemSelectListItem>
        <SemSelectListItem Text=""Option 2"" Value=""Option_2""></SemSelectListItem>
        <SemSelectListItem Text=""Option 3"" Value=""Option_3""></SemSelectListItem>
        <SemSelectListItem Text=""Option 4"" Value=""Option_4""></SemSelectListItem>
      </ListItems>
    </SemDropdownSelection>") />*@


@code {
  private bool dropdownEnabled { get; set; } = false;
  public string SelectedValue { get; set; }
  public string SelectedValue2 { get; set; }
  public string SelectedValue3 { get; set; }
  public int SelectedDummyId { get; set; } = 4;
  public string SelectedDummyName { get; set; } = "Lorem";
  public int? SelectedNullDummyId { get; set; } = 3;
  SemanticBlazor.Web.Data.DummyData SelectedDummy { get; set; }
  List<SemanticBlazor.Web.Data.DummyData> dummies = new List<Data.DummyData>();
  List<ListItem> options { get; set; } = new List<ListItem>()
{
    new ListItem() { Text="Option 1" },
    new ListItem() { Text="Option 2" },
    new ListItem() { Text="Option 3" },
    new ListItem() { Text="Option 4" }
  };
  Option SelectedOption { get; set; }

  protected override async Task OnInitializedAsync()
  {
    dummies = await dummyData.GetAllDataAsync();
    dummies = dummies.Take(5).ToList();
    SelectedDummy = dummies.Skip(1).First();
  }

  enum Option
  {
    Option_1,
    Option_2,
    Option_3,
    Option_4
  }
}
